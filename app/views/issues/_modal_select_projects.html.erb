<%  
  custom_fields = ProjectCustomField.where("name IN (?)", Setting["plugin_redmine_multiprojects_issue"]['custom_fields'])    
%>

<h3 class="title"><%= l(:field_project).pluralize %></h3>

<div data-controller="projects-selection">

  <div class="actions_links">
    <%= l("button_filter") %> :
    <input data-action="input->projects-selection#hide_by_name"/>
  </div>

  <div class="actions_links">
    <%= l("Selection") %> :
    <%= link_to l("select_all"), '#', id: "link_select_all", :data => { :action => 'click->projects-selection#select_all' } %>
    |
    <%= link_to l("select_none"), '#', id: "link_select_all", :data => { :action => 'click->projects-selection#select_none' } %>
    |
    <%= link_to l("advanced_selection"), '#', id: "link_advanced_selection", :data => { :action => 'click->projects-selection#toggle_advanced_selection' } %>

    <div class="advanced_selection hidden" data-target="projects-selection.filters">
      <div data-target="projects-selection.filter" class="first">
        <%= select_tag 'filter_name',
                       options_for_select(custom_fields.map { |cf| [cf.name, cf.id] }),
                       :prompt => l("select_filter"),
                       :id => "select_filter",
                       :class => "select_box_custom_field_value",
                       :data => {
                         action: 'change->projects-selection#select_filter'
                       } %>
        <%= select_tag 'filter_value',
                       '',
                       :id => "select_values",
                       :multiple => true,
                       :data => {
                         action: 'change->projects-selection#select_filter_values'
                       } %>
        <%= link_to "(#{l('button_delete')})", '#', class: 'hidden-if-first', data: { action: 'click->projects-selection#remove_filter' } %>
      </div>
      <%= link_to "+ #{l('add_a_filter')}", '#', data: { action: 'click->projects-selection#add_filter' } %>
    </div>    
  </div>

  <div class="projects_container">
    <div class="columns" id="project_nested_list">
      
    </div>
  </div>

  <p>
    <%= l("selected_projects") %>:
    <span id="selection_counter" data-target="projects-selection.counter"></span>
    <span style="margin-left: 5px;">
      (<%= link_to l("hide_non_selected_projects"),
                   '#',
                   data: { action: 'click->projects-selection#hide_non_selected_projects',
                           target: 'projects-selection.hide_projects_button' },
                   style: 'display: inline-block'
    %><%= link_to l("show_all_projects"),
                  '#',
                  data: { action: 'click->projects-selection#show_all_projects',
                          target: 'projects-selection.show_projects_button' },
                  style: 'display: none'
    %>)
    </span>
  </p>

  <p class="buttons">
    <%= submit_tag l(:button_apply), :name => nil, :onclick => "updateSelectedProjects();hideModal(this);", :type => 'button', :id => 'button_apply_projects' %>
  </p>

</div>

<script type="text/javascript">

    $("#project_nested_list").html($("#allowed_projects").html());
    $("#allowed_projects input:checkbox[name='project_ids[]']").each(function () {
      // update all projects in the modal
      if ($(this).is(":checked")){        
        $("#project_nested_list input:checkbox[value='"+$(this).val()+"']").prop("checked", true);           
      } else {
        $("#project_nested_list input:checkbox[value='"+$(this).val()+"']").prop("checked", false);           
      }
    });

    function updateSelectedProjects() {

        $("select#<%= select_tag_id %> option").each(function () {
            this.selected = "";
        });
        
        
        var htmlContent = "";
        $("#project_nested_list input:checkbox[name='project_ids[]']").each(function () {
          // update all projects in div=allowed_projects
          if ($(this).is(":checked")){        
            $("#allowed_projects input:checkbox[value='"+$(this).val()+"']").prop("checked", true);
            $("#<%= select_tag_id %> option[value=" + $(this).val() + "]").prop("selected", true);
          } else {
            $("#allowed_projects input:checkbox[value='"+$(this).val()+"']").prop("checked", false);
            $("#<%= select_tag_id %> option[value=" + $(this).val() + "]").prop("selected", false);
          }
        });
        $("#project_nested_list input:checkbox[name='project_ids[]']:checked").each(function () {
            if ($(this).val() != <%= @issue.project.id %>) {
                htmlContent += " <span class=\"list_projects_names\">" + $(this).closest('label').text() + "</span>";
            }
        });
        $("#projects_form #list_of_projects_per_issue").html(htmlContent);
        if (htmlContent == "") {
            $(".and_x_other_projects").css("display", "none");
            $("#answers-on-secondary-projects").hide()
        } else {
            $(".and_x_other_projects").css("display", "inline");
            $("#answers-on-secondary-projects").show()
        }
       
     
    }

</script>
